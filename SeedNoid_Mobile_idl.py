# Python stubs generated by omniidl from idl/SeedNoid_Mobile.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "ExtendedDataTypes.idl"
import ExtendedDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

#
# Start of module "RTC"
#
__name__ = "RTC"
_0_RTC = omniORB.openModule("RTC", r"idl/SeedNoid_Mobile.idl")
_0_RTC__POA = omniORB.openModule("RTC__POA", r"idl/SeedNoid_Mobile.idl")


# struct LifterAngle
_0_RTC.LifterAngle = omniORB.newEmptyClass()
class LifterAngle (omniORB.StructBase):
    _NP_RepositoryId = "IDL:RTC/LifterAngle:1.0"

    def __init__(self, top, bottom):
        self.top = top
        self.bottom = bottom

_0_RTC.LifterAngle = LifterAngle
_0_RTC._d_LifterAngle  = (omniORB.tcInternal.tv_struct, LifterAngle, LifterAngle._NP_RepositoryId, "LifterAngle", "top", omniORB.tcInternal.tv_double, "bottom", omniORB.tcInternal.tv_double)
_0_RTC._tc_LifterAngle = omniORB.tcInternal.createTypeCode(_0_RTC._d_LifterAngle)
omniORB.registerType(LifterAngle._NP_RepositoryId, _0_RTC._d_LifterAngle, _0_RTC._tc_LifterAngle)
del LifterAngle

# enum RETURN_VALUE
_0_RTC.RETURN_OK = omniORB.EnumItem("RETURN_OK", 0)
_0_RTC.RETURN_MOVE_OK = omniORB.EnumItem("RETURN_MOVE_OK", 1)
_0_RTC.RETURN_INVALID_PARAMETER = omniORB.EnumItem("RETURN_INVALID_PARAMETER", 2)
_0_RTC.RETURN_NOT_FOUND = omniORB.EnumItem("RETURN_NOT_FOUND", 3)
_0_RTC.RETURN_OUT_OF_RANGE = omniORB.EnumItem("RETURN_OUT_OF_RANGE", 4)
_0_RTC.RETURN_ERROR = omniORB.EnumItem("RETURN_ERROR", 5)
_0_RTC.RETVAL_ARRIVAL_OK = omniORB.EnumItem("RETVAL_ARRIVAL_OK", 6)
_0_RTC.RETVAL_EMERGENCY = omniORB.EnumItem("RETVAL_EMERGENCY", 7)
_0_RTC.RETVAL_SET_PARAM = omniORB.EnumItem("RETVAL_SET_PARAM", 8)
_0_RTC.RETVAL_MOVE_START = omniORB.EnumItem("RETVAL_MOVE_START", 9)
_0_RTC.RETVAL_MOVE_STOP = omniORB.EnumItem("RETVAL_MOVE_STOP", 10)
_0_RTC.RETURN_VALUE = omniORB.Enum("IDL:RTC/RETURN_VALUE:1.0", (_0_RTC.RETURN_OK, _0_RTC.RETURN_MOVE_OK, _0_RTC.RETURN_INVALID_PARAMETER, _0_RTC.RETURN_NOT_FOUND, _0_RTC.RETURN_OUT_OF_RANGE, _0_RTC.RETURN_ERROR, _0_RTC.RETVAL_ARRIVAL_OK, _0_RTC.RETVAL_EMERGENCY, _0_RTC.RETVAL_SET_PARAM, _0_RTC.RETVAL_MOVE_START, _0_RTC.RETVAL_MOVE_STOP,))

_0_RTC._d_RETURN_VALUE  = (omniORB.tcInternal.tv_enum, _0_RTC.RETURN_VALUE._NP_RepositoryId, "RETURN_VALUE", _0_RTC.RETURN_VALUE._items)
_0_RTC._tc_RETURN_VALUE = omniORB.tcInternal.createTypeCode(_0_RTC._d_RETURN_VALUE)
omniORB.registerType(_0_RTC.RETURN_VALUE._NP_RepositoryId, _0_RTC._d_RETURN_VALUE, _0_RTC._tc_RETURN_VALUE)

# enum LIFTER_STATE
_0_RTC.LIFTER_STOPPED = omniORB.EnumItem("LIFTER_STOPPED", 0)
_0_RTC.LIFTER_MOVING = omniORB.EnumItem("LIFTER_MOVING", 1)
_0_RTC.LIFTER_SET_PARAM_OK = omniORB.EnumItem("LIFTER_SET_PARAM_OK", 2)
_0_RTC.LIFTER_ERROR = omniORB.EnumItem("LIFTER_ERROR", 3)
_0_RTC.LIFTER_STATE = omniORB.Enum("IDL:RTC/LIFTER_STATE:1.0", (_0_RTC.LIFTER_STOPPED, _0_RTC.LIFTER_MOVING, _0_RTC.LIFTER_SET_PARAM_OK, _0_RTC.LIFTER_ERROR,))

_0_RTC._d_LIFTER_STATE  = (omniORB.tcInternal.tv_enum, _0_RTC.LIFTER_STATE._NP_RepositoryId, "LIFTER_STATE", _0_RTC.LIFTER_STATE._items)
_0_RTC._tc_LIFTER_STATE = omniORB.tcInternal.createTypeCode(_0_RTC._d_LIFTER_STATE)
omniORB.registerType(_0_RTC.LIFTER_STATE._NP_RepositoryId, _0_RTC._d_LIFTER_STATE, _0_RTC._tc_LIFTER_STATE)

# enum TARGETPOSITION_STATE
_0_RTC.TARFETPOSITION_STOPPED = omniORB.EnumItem("TARFETPOSITION_STOPPED", 0)
_0_RTC.TARGETPOSITION_MOVING = omniORB.EnumItem("TARGETPOSITION_MOVING", 1)
_0_RTC.TARGETPOSITION_ARRIVED = omniORB.EnumItem("TARGETPOSITION_ARRIVED", 2)
_0_RTC.TARGETPOSITION_SET_PARAM_OK = omniORB.EnumItem("TARGETPOSITION_SET_PARAM_OK", 3)
_0_RTC.TARGETPOSITION_ERROR = omniORB.EnumItem("TARGETPOSITION_ERROR", 4)
_0_RTC.TARGETPOSITION_STATE = omniORB.Enum("IDL:RTC/TARGETPOSITION_STATE:1.0", (_0_RTC.TARFETPOSITION_STOPPED, _0_RTC.TARGETPOSITION_MOVING, _0_RTC.TARGETPOSITION_ARRIVED, _0_RTC.TARGETPOSITION_SET_PARAM_OK, _0_RTC.TARGETPOSITION_ERROR,))

_0_RTC._d_TARGETPOSITION_STATE  = (omniORB.tcInternal.tv_enum, _0_RTC.TARGETPOSITION_STATE._NP_RepositoryId, "TARGETPOSITION_STATE", _0_RTC.TARGETPOSITION_STATE._items)
_0_RTC._tc_TARGETPOSITION_STATE = omniORB.tcInternal.createTypeCode(_0_RTC._d_TARGETPOSITION_STATE)
omniORB.registerType(_0_RTC.TARGETPOSITION_STATE._NP_RepositoryId, _0_RTC._d_TARGETPOSITION_STATE, _0_RTC._tc_TARGETPOSITION_STATE)

# interface LifterPoseInterface
_0_RTC._d_LifterPoseInterface = (omniORB.tcInternal.tv_objref, "IDL:RTC/LifterPoseInterface:1.0", "LifterPoseInterface")
omniORB.typeMapping["IDL:RTC/LifterPoseInterface:1.0"] = _0_RTC._d_LifterPoseInterface
_0_RTC.LifterPoseInterface = omniORB.newEmptyClass()
class LifterPoseInterface :
    _NP_RepositoryId = _0_RTC._d_LifterPoseInterface[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.LifterPoseInterface = LifterPoseInterface
_0_RTC._tc_LifterPoseInterface = omniORB.tcInternal.createTypeCode(_0_RTC._d_LifterPoseInterface)
omniORB.registerType(LifterPoseInterface._NP_RepositoryId, _0_RTC._d_LifterPoseInterface, _0_RTC._tc_LifterPoseInterface)

# LifterPoseInterface operations and attributes
LifterPoseInterface._d_checkState = ((), (omniORB.typeMapping["IDL:RTC/LIFTER_STATE:1.0"], ), None)
LifterPoseInterface._d_setLifterTime = ((omniORB.tcInternal.tv_double, ), (omniORB.typeMapping["IDL:RTC/LIFTER_STATE:1.0"], ), None)
LifterPoseInterface._d_sendLifterAngle = ((omniORB.typeMapping["IDL:RTC/LifterAngle:1.0"], ), (omniORB.typeMapping["IDL:RTC/RETURN_VALUE:1.0"], ), None)
LifterPoseInterface._d_sendLifterPose = ((omniORB.typeMapping["IDL:RTC/Point3D:1.0"], ), (omniORB.typeMapping["IDL:RTC/RETURN_VALUE:1.0"], ), None)
LifterPoseInterface._d_getLifterAngle = ((), (omniORB.typeMapping["IDL:RTC/RETURN_VALUE:1.0"], omniORB.typeMapping["IDL:RTC/LifterAngle:1.0"]), None)
LifterPoseInterface._d_getLifterPose = ((), (omniORB.typeMapping["IDL:RTC/RETURN_VALUE:1.0"], omniORB.typeMapping["IDL:RTC/Point3D:1.0"]), None)

# LifterPoseInterface object reference
class _objref_LifterPoseInterface (CORBA.Object):
    _NP_RepositoryId = LifterPoseInterface._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def checkState(self, *args):
        return _omnipy.invoke(self, "checkState", _0_RTC.LifterPoseInterface._d_checkState, args)

    def setLifterTime(self, *args):
        return _omnipy.invoke(self, "setLifterTime", _0_RTC.LifterPoseInterface._d_setLifterTime, args)

    def sendLifterAngle(self, *args):
        return _omnipy.invoke(self, "sendLifterAngle", _0_RTC.LifterPoseInterface._d_sendLifterAngle, args)

    def sendLifterPose(self, *args):
        return _omnipy.invoke(self, "sendLifterPose", _0_RTC.LifterPoseInterface._d_sendLifterPose, args)

    def getLifterAngle(self, *args):
        return _omnipy.invoke(self, "getLifterAngle", _0_RTC.LifterPoseInterface._d_getLifterAngle, args)

    def getLifterPose(self, *args):
        return _omnipy.invoke(self, "getLifterPose", _0_RTC.LifterPoseInterface._d_getLifterPose, args)

    __methods__ = ["checkState", "setLifterTime", "sendLifterAngle", "sendLifterPose", "getLifterAngle", "getLifterPose"] + CORBA.Object.__methods__

omniORB.registerObjref(LifterPoseInterface._NP_RepositoryId, _objref_LifterPoseInterface)
_0_RTC._objref_LifterPoseInterface = _objref_LifterPoseInterface
del LifterPoseInterface, _objref_LifterPoseInterface

# LifterPoseInterface skeleton
__name__ = "RTC__POA"
class LifterPoseInterface (PortableServer.Servant):
    _NP_RepositoryId = _0_RTC.LifterPoseInterface._NP_RepositoryId


    _omni_op_d = {"checkState": _0_RTC.LifterPoseInterface._d_checkState, "setLifterTime": _0_RTC.LifterPoseInterface._d_setLifterTime, "sendLifterAngle": _0_RTC.LifterPoseInterface._d_sendLifterAngle, "sendLifterPose": _0_RTC.LifterPoseInterface._d_sendLifterPose, "getLifterAngle": _0_RTC.LifterPoseInterface._d_getLifterAngle, "getLifterPose": _0_RTC.LifterPoseInterface._d_getLifterPose}

LifterPoseInterface._omni_skeleton = LifterPoseInterface
_0_RTC__POA.LifterPoseInterface = LifterPoseInterface
omniORB.registerSkeleton(LifterPoseInterface._NP_RepositoryId, LifterPoseInterface)
del LifterPoseInterface
__name__ = "RTC"

# interface TargetPositionInterface
_0_RTC._d_TargetPositionInterface = (omniORB.tcInternal.tv_objref, "IDL:RTC/TargetPositionInterface:1.0", "TargetPositionInterface")
omniORB.typeMapping["IDL:RTC/TargetPositionInterface:1.0"] = _0_RTC._d_TargetPositionInterface
_0_RTC.TargetPositionInterface = omniORB.newEmptyClass()
class TargetPositionInterface :
    _NP_RepositoryId = _0_RTC._d_TargetPositionInterface[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.TargetPositionInterface = TargetPositionInterface
_0_RTC._tc_TargetPositionInterface = omniORB.tcInternal.createTypeCode(_0_RTC._d_TargetPositionInterface)
omniORB.registerType(TargetPositionInterface._NP_RepositoryId, _0_RTC._d_TargetPositionInterface, _0_RTC._tc_TargetPositionInterface)

# TargetPositionInterface operations and attributes
TargetPositionInterface._d_checkState = ((), (omniORB.typeMapping["IDL:RTC/TARGETPOSITION_STATE:1.0"], ), None)
TargetPositionInterface._d_checkArrived = ((), (omniORB.typeMapping["IDL:RTC/TARGETPOSITION_STATE:1.0"], ), None)
TargetPositionInterface._d_setPositionParam = ((omniORB.typeMapping["IDL:RTC/Pose2D:1.0"], ), (omniORB.typeMapping["IDL:RTC/RETURN_VALUE:1.0"], ), None)
TargetPositionInterface._d_moveStart = ((), (omniORB.typeMapping["IDL:RTC/RETURN_VALUE:1.0"], ), None)
TargetPositionInterface._d_moveStop = ((), (omniORB.typeMapping["IDL:RTC/RETURN_VALUE:1.0"], ), None)

# TargetPositionInterface object reference
class _objref_TargetPositionInterface (CORBA.Object):
    _NP_RepositoryId = TargetPositionInterface._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def checkState(self, *args):
        return _omnipy.invoke(self, "checkState", _0_RTC.TargetPositionInterface._d_checkState, args)

    def checkArrived(self, *args):
        return _omnipy.invoke(self, "checkArrived", _0_RTC.TargetPositionInterface._d_checkArrived, args)

    def setPositionParam(self, *args):
        return _omnipy.invoke(self, "setPositionParam", _0_RTC.TargetPositionInterface._d_setPositionParam, args)

    def moveStart(self, *args):
        return _omnipy.invoke(self, "moveStart", _0_RTC.TargetPositionInterface._d_moveStart, args)

    def moveStop(self, *args):
        return _omnipy.invoke(self, "moveStop", _0_RTC.TargetPositionInterface._d_moveStop, args)

    __methods__ = ["checkState", "checkArrived", "setPositionParam", "moveStart", "moveStop"] + CORBA.Object.__methods__

omniORB.registerObjref(TargetPositionInterface._NP_RepositoryId, _objref_TargetPositionInterface)
_0_RTC._objref_TargetPositionInterface = _objref_TargetPositionInterface
del TargetPositionInterface, _objref_TargetPositionInterface

# TargetPositionInterface skeleton
__name__ = "RTC__POA"
class TargetPositionInterface (PortableServer.Servant):
    _NP_RepositoryId = _0_RTC.TargetPositionInterface._NP_RepositoryId


    _omni_op_d = {"checkState": _0_RTC.TargetPositionInterface._d_checkState, "checkArrived": _0_RTC.TargetPositionInterface._d_checkArrived, "setPositionParam": _0_RTC.TargetPositionInterface._d_setPositionParam, "moveStart": _0_RTC.TargetPositionInterface._d_moveStart, "moveStop": _0_RTC.TargetPositionInterface._d_moveStop}

TargetPositionInterface._omni_skeleton = TargetPositionInterface
_0_RTC__POA.TargetPositionInterface = TargetPositionInterface
omniORB.registerSkeleton(TargetPositionInterface._NP_RepositoryId, TargetPositionInterface)
del TargetPositionInterface
__name__ = "RTC"

#
# End of module "RTC"
#
__name__ = "SeedNoid_Mobile_idl"

_exported_modules = ( "RTC", )

# The end.
